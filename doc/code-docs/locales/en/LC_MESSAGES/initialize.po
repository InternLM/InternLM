# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, InternLM Team
# This file is distributed under the same license as the InternLM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: InternLM \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-07 12:56+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/initialize.rst:2 bde8f365ee4c46c190b59181733fc8ad
msgid "训练构建"
msgstr "Training Setup"

#: ../../source/initialize.rst:7 c23f628793184cac981a4325eaee8671
msgid "命令行参数解析"
msgstr "Argument Parsing"

#: ../../source/initialize.rst:8 dc95ea4cfc11421394c2e6ee0f1210b2
msgid ""
"InternLM 使用 `argparse <https://docs.python.org/3/library/argparse.html>`_"
" 库来向InternLM运行时提供命令行参数配置。用户可 使用 "
"``internlm.initialize.get_default_parser()`` 来获取 InternLM "
"的默认解析器，其中包含一些内置参数，用户可以向此解析器添加自定义参数。"
msgstr "InternLM uses the `argparse <https://docs.python.org/3/library/argparse.html>`_ library to supply commandline
configuration to the InternLM runtime. Use ``internlm.initialize.get_default_parser()`` to get InternLM's default
parser with some builtin arguments, users can add custom parameters to this parser."

#: 81e2291cb93441d68caf18a2cf90e8f4
#: internlm.initialize.launch.get_default_parser:1 of
msgid ""
"Reads user command line and uses an argument parser to parse the input "
"arguments. Input arguments include configuration, host, port, world size,"
" local rank, backend for torch.distributed."
msgstr ""

#: 2ed45af36bd643b18eeb6f3f840b937a 38947b7949b84fed95b3270d4e8345d1
#: 5c7239b84bc547038804a0dfddaab5db 60be7dc82e0349828c35fa48a58fe14d
#: edd6fb2597ca484a8e354209d3c8eb24
#: internlm.initialize.initialize_trainer.initialize_trainer
#: internlm.initialize.launch.get_default_parser
#: internlm.train.training_internlm.get_train_data_loader
#: internlm.train.training_internlm.initialize_model
#: internlm.train.training_internlm.initialize_optimizer of
msgid "返回"
msgstr ""

#: c175fd0b287247c68d7c2afa8c20886e
#: internlm.initialize.launch.get_default_parser:4 of
msgid ""
"Returns the parser with the default arguments, the user may add "
"customized arguments into this parser."
msgstr ""

#: 581edea1f5534a3c9b717bcfe0ccc843 8570a612e27d489084360a78747f5c3b
#: e1c068c116ca4ab7b7a7e7c5fd9d74bf
#: internlm.initialize.initialize_trainer.initialize_trainer
#: internlm.initialize.launch.get_default_parser
#: internlm.train.training_internlm.initialize_model of
msgid "返回类型"
msgstr ""

#: ../../source/initialize.rst:25 7b13610c7218450c8ee2fb3797a887d5
msgid "模型初始化"
msgstr "Model Initialization"

#: 97381de7d62b4ec184278b60ff97bbc1
#: internlm.train.training_internlm.initialize_model:1 of
msgid "Initialize model with Automatic Mixed Precision."
msgstr ""

#: bb6fa8fa5dc949db9a744978633d8342
#: internlm.train.training_internlm.initialize_model:3 of
msgid "The neural network model to be trained or evaluated."
msgstr ""

#: ../../source/initialize.rst:29 aabb2e3fc5e64cfe8a07bb9484e7302c
msgid "InternLM 在配置文件中使用字段 ``model_type`` 和 ``model`` 来控制模型初始化过程。示例模型初始化配置定义如下："
msgstr "InternLM uses the field ``model_type`` and ``model`` in the config file to control model initialization process. An example model initialization configuration 
can be defined as follows:"

#: ../../source/initialize.rst:57 2b71a22f89bb4ea6a23c77579c9a6dd7
msgid "字段 ``model_type`` 指明了要初始化的模型类型"
msgstr "The field ``model_type`` specifics the model type has been registered and to be initialized."

#: ../../source/initialize.rst:58 42e04b934df74114a597bdbeb71564dd
msgid "字段 ``model`` 中的参数指定了在模型初始化过程中的参数设置"
msgstr "The parameters in field ``model`` specific the configuration settings during model initialization."

#: ../../source/initialize.rst:60 f3ad7f9782cf4a0eb93e2efeb472b728
msgid ""
"值得注意的是，用户可以定义新的模型类型，并使用装饰器 ``@MODEL_INITIALIZER.register_module`` "
"注册模型的初始化函数，其中 ``MODEL_INITIALIZER`` 是类 "
"``internlm.util.registry.Registry`` 的一个实例化对象，示例如下所示："
msgstr "It is worth noting that, users can define new model type, and register model's initialization function by decorater ``@MODEL_INITIALIZER.register_module``, which ``MODEL_INITIALIZER`` is an instantiated object of class ``internlm.util.registry.Registry``, the example is shown as follows."

#: ../../source/initialize.rst:72 2ac2c565e912434992ad77025917e95e
msgid "优化器初始化"
msgstr "Optimizer Initialization"

#: 5e124255717641dbb4037441a4218fdd
#: internlm.train.training_internlm.initialize_optimizer:1 of
msgid "Initialize optimizer."
msgstr ""

#: 7201520cf20247118753030b268adbaf 7f3f458dc75747fe82737848b74909e6
#: 9b70a966fb624ef9a146fe6f916ed7c1
#: internlm.initialize.initialize_trainer.initialize_trainer
#: internlm.train.training_internlm.get_train_data_loader
#: internlm.train.training_internlm.initialize_optimizer of
msgid "参数"
msgstr ""

#: 57aca34ec79f4c9da55bc0cc501f53ca
#: internlm.train.training_internlm.initialize_optimizer:3 of
msgid "Your model instance to be trained or evaluated."
msgstr ""

#: cb8c0bd0dbfd49928c0d377c424c45ad
#: internlm.train.training_internlm.initialize_optimizer:6 of
msgid "A tuple of (optimizer, beta2_scheduler, lr_scheduler)."
msgstr ""

#: ../../source/initialize.rst:79 5fb81d0eb3bd405a93abac5c3ed2a5c9
msgid "数据加载器初始化"
msgstr "Dataloader Initialization"

#: 27cf06aa8fdb4bedb759b50e3fabe68e
#: internlm.train.training_internlm.get_train_data_loader:1 of
msgid "Generate and return the training data loader."
msgstr ""

#: 6483e2d93f6341579c7ed8f125dab874
#: internlm.train.training_internlm.get_train_data_loader:3 of
msgid "number of subprocesses used for dataloader."
msgstr ""

#: d8fd4f2b6d6b4e7580e5e8eb3c445e6c
#: internlm.train.training_internlm.get_train_data_loader:5 of
msgid "generate function for dataset."
msgstr ""

#: 6671cd4284c346308c49512a776916dd
#: internlm.train.training_internlm.get_train_data_loader:7 of
msgid "dataset sampler for training dataloader."
msgstr ""

#: 2f97bf1c481b41d681e1b700b091e139
#: internlm.train.training_internlm.get_train_data_loader:9 of
msgid "collate function for training dataloader."
msgstr ""

#: a60a5d039ff24bf4a7d854e6af3e1cf0
#: internlm.train.training_internlm.get_train_data_loader:12 of
msgid "A tuple of (train_dl, dataset_types)."
msgstr ""

#: ../../source/initialize.rst:86 8836203b86ee4474bb1551259db89968
msgid "Trainer 初始化"
msgstr "Trainer Initialization"

#: 7c0a393a6991403486fa6d65e6d4a4df
#: internlm.initialize.initialize_trainer.initialize_trainer:1 of
msgid ""
"Core function to wrap the essential training components with our "
"functionality based on the config which is loaded into gpc.config."
msgstr ""

#: 11437e8b559c4451b85895f8bd8c901b
#: internlm.initialize.initialize_trainer.initialize_trainer:4 of
msgid "Your model instance or a function to build the model."
msgstr ""

#: 59a1d43831cc4402ad4c1dabce8b2dfb
#: internlm.initialize.initialize_trainer.initialize_trainer:6 of
msgid "Your optimizer for training."
msgstr ""

#: 6061fa9ccfeb4e6095795b91bf74095f
#: internlm.initialize.initialize_trainer.initialize_trainer:8 of
msgid "Your criterion instance."
msgstr ""

#: 1de336f4ff12487fb7d35e6c5bee78af
#: internlm.initialize.initialize_trainer.initialize_trainer:10 of
msgid "Dataloader for training."
msgstr ""

#: 9dafc0f1843d4f079bbc2fd289d3fad6
#: internlm.initialize.initialize_trainer.initialize_trainer:12 of
msgid "Dataloader for testing."
msgstr ""

#: 0c26bbd58df4481290a9cc89b63b8bd0
#: internlm.initialize.initialize_trainer.initialize_trainer:14 of
msgid "Your lr scheduler instance, optional."
msgstr ""

#: 2b2dae4972b44c679182320a208eb3cc
#: internlm.initialize.initialize_trainer.initialize_trainer:17 of
msgid ""
"A tuple of ``(trainer, train_dataloader, test_dataloader, lr_scheduler)``"
" where only ``trainer`` could not be None."
msgstr ""

