name: demo-in-readme
on: 
  push:
  pull_request:
    branches:
      - "main"
      - "develop"
    paths-ignore:
      - "docs/**"
      - "**.md"
env:
  WORKSPACE_PREFIX: $(echo $GITHUB_WORKSPACE |cut -d '/' -f 1-4)

jobs:
  check-requirements:
    runs-on: [lmtest]
    steps:
    - name: mask env
      run: |
        echo "::add-mask::${{env.WORKSPACE_PREFIX}}"
    - uses: actions/checkout@v3
      with:
         fetch-depth: 2
    - name: check-requirements
      run: |
        source activate internlm-env-test
        changed_files=$(git diff --name-only -r HEAD^1 HEAD)
        echo $changed_files
        if [[ $changed_files =~ "runtime.txt" ]]; then
          pip install -r requirements/runtime.txt
        fi

        if [[ $changed_files =~ "torch.txt"  ]]; then
          pip install -r requirements/torch.txt
        fi

  dataset-preparation:
    if: ${{ always() }}
    needs: check-requirements
    runs-on: [lmtest]
    steps:
    - name: mask env 
      run: |
        echo "::add-mask::${{env.WORKSPACE_PREFIX}}"
    - uses: actions/checkout@v3

    - name: raw-chinese-data
      run: |
        source activate internlm-env-test
        sh ./ci_scripts/data/tokenizer_chinese.sh

    - name: alpaca-data
      run: |
        source activate internlm-env-test
        sh ./ci_scripts/data/tokenizer_alpaca.sh

  train:
    if: ${{ always() }}
    needs: check-requirements
    runs-on: [lmtest]
    timeout-minutes: 2
    steps:
    - name: mask env 
      run: |
        echo "::add-mask::${{env.WORKSPACE_PREFIX}}"
    - uses: actions/checkout@v3

    - name: slurm-train
      run: |
        source activate internlm-env-test
        sh ./ci_scripts/train/slurm_train.sh
        rm -rf $GITHUB_WORKSPACE/llm_ckpts

    - name: torchrun-train
      run: |
        source activate internlm-env-test
        sh ./ci_scripts/train/torchrun.sh
        rm -rf $GITHUB_WORKSPACE/llm_ckpts

  convert-model-then-load:
    if: ${{ always() }}
    needs: check-requirements
    runs-on: [lmtest]
    steps:
    - name: mask env
      run: |
        echo "::add-mask::${{env.WORKSPACE_PREFIX}}"
    - uses: actions/checkout@v3

    - name: convert-model-then-load
      run: |
        source activate internlm-env-test
        export PYTHONPATH=$PWD:$PYTHONPATH
        sh ./ci_scripts/model/convert_to_hf.sh 
        cd ./hf_ckpt
        nohup srun -p llm python ../ci_scripts/model/loaded_as_transformer.py | tee -a ${GITHUB_JOB}.log
        cd ..
        rm -rf $GITHUB_WORKSPACE/hf_ckpt
  
  load-chat-model-in-hf:
    if: ${{ always() }}
    needs: check-requirements
    runs-on: [lmtest]
    steps:
    - name: mask env 
      run: |
        echo "::add-mask::${{env.WORKSPACE_PREFIX}}"
    - uses: actions/checkout@v3

    - name: chat-model-in-hf
      run: |
        source activate internlm-env-test
        nohup srun -p llm python ./ci_scripts/model/demo_load_7B_chat_model.py | tee -a ${GITHUB_JOB}.log
